<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springpractice.mapper.CommentMapper">
    <insert id="insertComment" parameterType="com.example.springpractice.dto.Comment">
        insert into comments(user_id,board_id,content,parent_comment_id) values (#{userId},#{boardId},#{content},#{parentId})
    </insert>
    <select id="getComments" parameterType="int" resultType="com.example.springpractice.dto.CommentLike">
        select
        c.id as id,
        c.user_id as userId,
        u.username as username,
        c.content as content,
        c.created_at as time,
        c.parent_comment_id as parentId,
        (select count(*) from comment_likes where
        comment_likes.comment_id = c.id) as likeCount
        from comments c join user u
        on c.user_id = u.id
        where c.board_id = #{boardId}
    </select>
    <select id="getComment" parameterType="int" resultType="com.example.springpractice.dto.Comment">
        select id,user_id userId, content,created_at time from comments where id = #{commentId}
    </select>
    <update id="updateComment" parameterType="com.example.springpractice.dto.Comment">
        update comments set content = #{content} where id = #{id}
    </update>
    <delete id="deleteComment" parameterType="int">
        delete from comments where id = #{commentId}
    </delete>
    <insert id="incrementLikes" parameterType="com.example.springpractice.dto.Like">
        insert into comment_likes(comment_id , user_id) values (#{commentId} ,#{userId})
    </insert>
    <delete id="decrementLikes" parameterType="com.example.springpractice.dto.Like">
        delete from comment_likes where comment_id = #{commentId} and user_id = #{userId}
    </delete>
</mapper>