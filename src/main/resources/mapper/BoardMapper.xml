<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.springpractice.mapper.BoardMapper">
    <insert id="insertBoard" parameterType="com.example.springpractice.dto.Board">
        insert into board(user_id,title,content) values (#{userId},#{title},#{content})
    </insert>
    <select id="countBoardList" resultType="int">
        select count(*) from board
    </select>
    <select id="myCountBoardList" resultType="int" parameterType="int">
        select count(*) from board where user_id = ${userId}
    </select>
    <select id="getBoardList" resultType="com.example.springpractice.dto.Board" parameterType="com.example.springpractice.dto.PageRequest">
        select id,title,content,user_id as userId, create_at as time from board
        order by id desc limit #{size} offset #{offset}
    </select>
    <select id="getMyBoardList" resultType="com.example.springpractice.dto.Board" parameterType="map">
        select id,title,content,user_id as userId,create_at as time from board
        where user_id = #{userId}
        order by id desc
        limit #{size} offset #{offset}
    </select>
    <select id="getBoard" parameterType="int">
        SELECT b.id AS id,
        b.content AS content,
        b.title AS title,
        b.user_id AS userId,
        u.username AS author
        from board b join user u
        on b.user_id = u.id
        where b.id = #{id}
    </select>
    <update id="updateBoard" parameterType="com.example.springpractice.dto.Board">
        update board set title = #{title} , content = #{content} where id = #{id}
    </update>
    <delete id="deleteBoard" parameterType="int">
        delete from board where id = #{id}
    </delete>
</mapper>